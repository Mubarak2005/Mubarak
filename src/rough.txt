
  background-color:hsla(40,0%,0%,1);
background-image:
radial-gradient(at 97% 27%, hsla(17,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 14% 81%, hsla(235,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 6% 20%, hsla(240,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 60% 54%, hsla(240,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 0% 36%, hsla(240,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 76% 72%, hsla(240,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 31% 78%, hsla(241,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 65% 53%, hsla(242,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 80% 12%, hsla(244,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 29% 40%, hsla(244,0%,0%,.3) 0px, transparent 50%),
radial-gradient(at 55% 0%, hsla(240,98%,23%,.3) 0px, transparent 50%),
radial-gradient(at 68% 100%, hsla(240,100%,22%,.3) 0px, transparent 50%),


background-color:hsla(0,0%,0%,1);
  background-image:
    radial-gradient(at 88% 0%, hsla(317,0%,0%,.8) 0px, transparent 50%),
    radial-gradient(at 5% 41%, hsla(122,0%,0%,.8) 0px, transparent 50%),
    radial-gradient(at 4% 96%, hsla(125,0%,0%,.8) 0px, transparent 50%),
    radial-gradient(at 87% 87%, hsla(125,100%,25%,.8) 0px, transparent 50%),
    radial-gradient(at 99% 36%, hsla(103,0%,0%,.8) 0px, transparent 50%),
    radial-gradient(at 97% 100%, hsla(125,95%,10%,.8) 0px, transparent 50%),
    radial-gradient(at 0% 0%, hsla(289,100%,14%,.8) 0px, transparent 50%),



     <div className='w-[85%] h-[80%] pr-10 pb-10 flex gap-5 justify-center items-center overflow-hidden relative'>
          <div className='w-1/2 h-full bg-[#ffffffb6] backdrop-blur-lg rounded-2xl overflow-hidden'>
            <img className="bg-cover" src="src/assets/bw_img3.png" alt="" />
          </div>

          <div className='text-black h-full w-1/2 font-[Bangers] flex flex-col gap-5 justify-between items-center'>
            
            
              <div className='m-h-1/2 w-full bg-[#ffffffb6] backdrop-blur-lg rounded-2xl overflow-hidden p-5 pl-7'>
                <h1 className='text-3xl'>I'm <span className='text-[#c42e95]'>Mubarak Ansari</span>, a <span className='text-[#2626b1]'>front-end</span> developer passionate about crafting websites that prioritize <span className='text-[#2626b1]'>smooth animations</span>  and engaging <span className='text-[#2626b1]'>user interactions</span>.</h1>
                <h1 className='text-2xl mt-5'>Let's work together to turn your <span className='text-[#2626b1]'>ideas</span> into unique, <span className='text-[#2626b1]'>dynamic</span> online experiences.</h1>
              </div>
              <div className='h-1/2 w-full bg-[#ffffffb6] backdrop-blur-lg rounded-2xl overflow-hidden p-5'>
                
              </div>
          
          </div>
          <div>

          </div>


        </div>



         <div className='shape1 absolute top-[15%] right-[15%] '>
          <img  className='w-80' src="src/assets/el3.png" alt="" />
        </div>
        <div className='blur-shape h-20 w-20 absolute top-[20%] right-[25%] rounded-full blur-3xl'></div>

        <div className='shape2 absolute bottom-[22%] left-[20%] '>
          <img  className='w-80' src="src/assets/el2.png" alt="" />
        </div>
        <div className='blur-shape h-20 w-20 absolute bottom-[25%] left-[28%] rounded-full blur-3xl'></div>


        body{
  width: 100%;
  /* height: 400vh; */
  background-color:hsla(0,0%,0%,1);
  background-image:
    radial-gradient(at 52% 67%, hsla(60,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 4% 71%, hsla(60,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 0% 100%, hsla(60,100%,18%,0.3) 0px, transparent 60%),
    radial-gradient(at 62% 46%, hsla(5,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 37% 31%, hsla(6,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 42% 47%, hsla(7,100%,17%,0.3) 0px, transparent 60%),
    radial-gradient(at 88% 73%, hsla(287,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 92% 70%, hsla(287,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 63% 52%, hsla(287,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 91% 100%, hsla(288,100%,28%,0.3) 0px, transparent 60%),
    radial-gradient(at 90% 61%, hsla(235,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 96% 48%, hsla(235,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 43% 38%, hsla(236,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 75% 35%, hsla(237,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 97% 45%, hsla(237,96%,38%,0.3) 0px, transparent 60%),
    radial-gradient(at 86% 68%, hsla(122,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 93% 27%, hsla(123,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 31% 0%, hsla(123,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 95% 54%, hsla(125,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 95% 46%, hsla(126,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 1% 43%, hsla(127,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 100% 11%, hsla(128,85%,29%,0.3) 0px, transparent 60%),
    radial-gradient(at 0% 0%, hsla(288,100%,17%,0.3) 0px, transparent 60%),
    url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='frantalNoise' baseFrequency='6.65' numOctaves='.01' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    /* mix-blend-mode:color-dodge; */
    background-size: cover;
    background-repeat: no-repeat;
}

background-color:hsla(0,0%,0%,1);
  background-image:
    radial-gradient(at 52% 67%, hsla(60,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 4% 71%, hsla(60,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 0% 100%, hsla(60,100%,18%,0.3) 0px, transparent 60%),
    radial-gradient(at 62% 46%, hsla(5,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 37% 31%, hsla(6,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 42% 47%, hsla(7,100%,17%,0.3) 0px, transparent 60%),
    radial-gradient(at 88% 73%, hsla(287,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 92% 70%, hsla(287,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 63% 52%, hsla(287,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 91% 100%, hsla(288,100%,28%,0.3) 0px, transparent 60%),
    radial-gradient(at 90% 61%, hsla(235,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 96% 48%, hsla(235,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 43% 38%, hsla(236,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 75% 35%, hsla(237,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 97% 45%, hsla(237,96%,38%,0.3) 0px, transparent 60%),
    radial-gradient(at 86% 68%, hsla(122,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 93% 27%, hsla(123,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 31% 0%, hsla(123,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 95% 54%, hsla(125,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 95% 46%, hsla(126,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 1% 43%, hsla(127,0%,0%,0.3) 0px, transparent 60%),
    radial-gradient(at 100% 11%, hsla(128,85%,29%,0.3) 0px, transparent 60%),
    radial-gradient(at 0% 0%, hsla(288,100%,17%,0.3) 0px, transparent 60%),
    url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='frantalNoise' baseFrequency='100.65' numOctaves='.01' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");



import { useGSAP } from '@gsap/react'
import gsap, { Power2 } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import React from 'react'

const ProjectSection = () => {
  gsap.registerPlugin(ScrollTrigger);
  useGSAP(() => {
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: ".project",
        start: "top top",
        end: "bottom top", 
        scrub: true,
        // markers: true,
        pin: true,
        toggleActions: "play none none reset"
      }
    });

    tl.to(".project-circle", {
      // border: "1px solid #fff",
      ease: Power2,
      // scale: 2,
      onUpdate: function() {
        const progress = this.progress();
        const clipValue = progress * 100;
        document.querySelector('.project-circle').style.setProperty('--clip', clipValue + '%');
      },
      // onComplete:{
      //     height:"300vh",
      //     width: "100%"
      //   }
    },'a')
    tl.to(".project-text",{
      scale: 2
    },'a');
    tl.to(".project-circle-in div",{
      transform: "-translateX(100%)",
      
    })
  })

  return (
    <div className='project relative h-screen w-full overflow-hidden'>
      <div className='flex justify-center items-center h-full w-full relative'>
        <div className='project-text text-[10vw] scale-[1]  font-[Brigends] font-extrabold uppercase flex items-center justify-center gap-2 leading-10 absolute z-[1]'>
          Projects
        </div>
        <div style={{'--clip': '0%'}} className='project-circle bg-black h-[500vh] w-full flex justify-center items-center scale-1 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-[10] rounded-full'>
          <div className='project-circle-in h-screen flex overflow-scroll sticky top-0 left-0'>
            <div className='h-screen w-[100vw] flex flex-shrink-0 justify-center items-center -translate-x-0 bg-red-400 '>Project 1</div>
            <div className='h-screen w-[100vw] flex flex-shrink-0 justify-center items-center -translate-x-0 bg-blue-400 '>Project 2</div>
            <div className='h-screen w-[100vw] flex flex-shrink-0 justify-center items-center -translate-x-0 bg-yellow-400 '>Project 3</div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default ProjectSection




<div className='project w-full overflow-hidden'>
      <div className='project-out h-[100vh] relative top-0 left-0 bg-[url("./src/assets/jap.jpg")] bg-cover'>
        <div className='project-in h-[100vh] w-full flex font-[Brigends] sticky top-0 left-0 '>
          <div className='project-text w-screen h-screen text-[10vw] flex-shrink-0 font-extrabold uppercase flex items-center justify-center leading-10 relative'>
            Projects
            <h1 className='absolute text-9xl font-[Abuget] text-blue-700 capitalize '>projects</h1>
          </div>
          <div className='project-1 h-screen text-5xl w-screen flex-shrink-0 flex justify-center items-center '>
              <div className='h-full w-full flex justify-center items-center flex-col gap-10 relative'>
                <div className='hidden project-circle h-40 w-40 bg-red-400 rounded-full absolute top-0 blur-xl '></div>
                <h1 className="text-3xl sm:text-[5vw] leading-[0vw] w-full  text-start xl:text-[3vw] text-[#fff] mt-10 xl:mt-0">Redesigned</h1>
                <h1 className="text-3xl sm:text-[5vw] leading-[0vw] w-full  text-start xl:text-[3vw] text-[#fff] mt-10 xl:mt-0">Amul Website</h1>
                <div className="w-[100%] sm:w-[90%] md:w-[75%] lg:w-[55%] xl:w-1/2 xl:h-1/2 mt-10 xl:mt-0 overflow-hidden">
                  {/* <video className="hidden xl:flex" src="./src/assets/amul.gif"></video> */}
                  <img className="" src="./src/assets/amul.gif" alt="Amul" />
                </div>
              </div>
          </div>
          <div className='h-screen text-5xl w-screen flex-shrink-0 flex justify-center items-center'>Project<span className='font-[Hanson] ml-3'>2</span></div>
          <div className='h-screen text-5xl w-screen flex-shrink-0 flex justify-center items-center'>Project<span className='font-[Hanson] ml-3'>3</span></div>
        </div>
      </div>
    </div>


    <div className='w-full mb-40 tracking-normal font-[Hanson] '>
          <div className='s-hero-txt text-xl md:text-3xl w-full leading-none overflow-hidden text-end'><h1 className='flex justify-end'>Code with a</h1></div>
          <div className='s-hero-txt text-xl md:text-3xl w-full leading-none overflow-hidden text-end'><h1 className='flex justify-end'>Creative Touch</h1></div>
        </div>

        const textContainers = document.querySelectorAll(".s-hero-txt h1");

    textContainers.forEach((textContainer) => {
      let textContent = textContainer.innerText;
      let letters = textContent.split("");
      textContainer.innerHTML = "";

      letters.forEach((letter) => {
        let span = document.createElement("span");
        if (letter === " ") {
          span.innerHTML = "&nbsp;"; // Use non-breaking space for spaces
        }else {
          span.textContent = letter;
        }
        
        textContainer.appendChild(span);
      });
    });

    gsap.from(".s-hero-txt span", {
      delay:1,
      opacity: 0,
      filter: "blur(20px)",
      stagger: .01,
      ease: Expo.easeOut,
      onComplete:function(){
        gsap.set(".h-bottom",{opacity:1})
      }
    });
    gsap.set(".h-bottom",{opacity:0})
    gsap.set(".h-bottom h1",{opacity:0,filter:"blur(20px)"})
    gsap.to(".h-bottom", {
      opacity:1,
      delay:1,
      width:"100%",
      ease: Expo.easeOut,
    });
    gsap.to(".h-bottom h1", {
      delay:1,
      opacity: 1.5,
      filter: "blur(0px)",
      ease: Expo,
    });


    import { useGSAP } from '@gsap/react'
import { easeIn } from 'framer-motion';
import gsap from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import React from 'react'

const ProjectSection = () => {
  gsap.registerPlugin(ScrollTrigger);
  useGSAP(() => {
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: ".project-out",
        start: "top top",
        end: "bottom top", 
        scrub: true,
        // markers: true,
        pin: true,
        toggleActions: "play none none reset"
      }
    });

    tl.to(".project-top", {
      height: "0vh",
      borderBottomLeftRadius: "100%",
      borderBottomRightRadius: "100%",
    },'a')
    // tl.to(".project-top h1", {
    //   bottom: "-50%"
    // },'a')
    tl.to(".project-bottom", {
      height: "0vh",
      borderTopLeftRadius: "100%",
      borderTopRightRadius: "100%",
    },'a')
    // tl.to(".project-bottom h1", {
    //   top: "0%"
    // },'a')

  })

  return (
    <div className='project h-[500vh] w-full bg-[#dedede]'>
      <div className='h-full w-full relative flex'>
        <div className='project-out h-screen w-full font-[Brigends] flex flex-col justify-between bg-red-600 sticky top-0 left-0'>
          <div className='project-top w-screen overflow-hidden h-[50vh] bg-[#0b0b14] text-[10vw] font-extrabold uppercase absolute top-[-10%] '>
            <h1 className='absolute bottom-[-30%] left-1/2 -translate-x-1/2'>Projects</h1>
            {/* <h1 className='absolute bottom-[-30%] text-9xl font-[Abuget] text-blue-700 capitalize '>projects</h1> */}
          </div>
          <div className='project-bottom w-screen overflow-hidden h-1/2 bg-[#0b0b14] text-[10vw] font-extrabold uppercase relative'>
            <h1 className='absolute top-[-30%] left-1/2 -translate-x-1/2'>Projects</h1>
            {/* <h1 className='absolute top-[-30%] text-9xl font-[Abuget] text-blue-700 capitalize '>projects</h1> */}
          </div>
          
        </div>
        <div className='h-screen w-full text-[#0b0b14] font-[Hanson] text-8xl flex justify-center items-center'>
            <h1>hello 👋,</h1>
        </div>
      </div>
    </div>
  )
}

export default ProjectSection


<div className='h-screen w-full overflow-hidden'>
      <div className='horizontal-scroll h-[300vh] w-full flex font-[Hanson] bg-[#11115a] relative'>
        <div className='horizontal-sticky h-screen w-full translate-x-[0%] flex sticky top-0 left-0 z-10'>
          <div className='h-screen bg-red-600 flex-shrink-0 w-full flex justify-center items-center'>
            Project 1
          </div>
          <div className='h-screen bg-green-600 flex-shrink-0 w-full flex justify-center items-center'>
            Project 2
          </div>
          <div className='h-screen bg-violet-600 flex-shrink-0 w-full flex justify-center items-center'>
            Project 3
          </div>
        </div>
      </div>
      </div>


      import { useGSAP } from '@gsap/react'
import { easeIn } from 'framer-motion';
import gsap from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import React from 'react'

const ProjectSection = () => {
  gsap.registerPlugin(ScrollTrigger);
  useGSAP(() => {
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: ".project-in",
        start: "50% 50%",
        end: "100% 50%", 
        scrub: true,
        // markers: true,
        pin: true,
        toggleActions: "play none none reset"
      }
    });
    tl.to(".project-top",{
      top:"-50%",
      borderBottomLeftRadius: "100%",
      borderBottomRightRadius: "100%",
      height: "0vh"
    },'a').to(".project-bottom",{
      bottom:"-50%",
      borderTopLeftRadius: "100%",
      borderTopRightRadius: "100%",
      height: "0vh"
    },'a');

    // gsap.to(".horizontal-sticky",{
    //   x:"-200%",
    //   scrollTrigger:{
    //     trigger:".horizontal-scroll",
    //     start:"50% 50%",
    //     end:"100% 50%",
    //     scrub:true,
    //     pin:true,
    //     markers:true
    //   }
    // })

  })

  return (
    <div className="project h-screen w-full bg-[#0b0b14] relative">
      <div className="project-in h-screen w-full absolute top-0 left-0 z-[100] ">

        <div className="project-top w-full h-1/2 bg-[#dedede] text-[#0b0b14] absolute top-[0%] overflow-hidden flex justify-center items-center">
          <h1 className="project-top-h font-[Brigends] text-[8vw] absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 top-[100%] ">
            Projects
          </h1>
          <h1 className="project-top-h font-[Abuget] text-[#ff0073] text-[8vw] absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 top-[100%] ">
            Projects
          </h1>
        </div>

        <div className="project-center w-full h-[0vh] font-[Hanson] text-6xl flex bg-[#0b0b14] ">
          
        </div>

        <div className="project-bottom w-full h-1/2 bg-[#dedede] text-[#0b0b14] absolute bottom-0 overflow-hidden flex justify-center items-center">
          <h1 className="project-bottom-h font-[Brigends] text-[8vw] absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 top-[0%] ">
            Projects
          </h1>
          <h1 className="project-bottom-h font-[Abuget] text-[#ff0073] text-[8vw] absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 top-[0%] ">
            Projects
          </h1>
        </div>

      </div>
      
      <div className='h-[300vh] w-full font-[Hanson] bg-[#11115a] relative top-20'>
          <div className='h-screen bg-red-600 flex-shrink-0 w-full flex justify-center items-center'>
            Project 1
          </div>
          <div className='h-screen bg-green-600 flex-shrink-0 w-full flex justify-center items-center'>
            Project 2
          </div>
          <div className='h-screen bg-violet-600 flex-shrink-0 w-full flex justify-center items-center'>
            Project 3
          </div>
        </div>
    </div>

  )
}

export default ProjectSection


<div className='flex flex-wrap justify-center items-center h-screen w-full absolute top-0 left-0 z-[0] overflow-hidden'>
        {Array.from({ length: 20 }).map((_, rowIndex) => (
          <div key={rowIndex} className='flex flex-row flex-wrap 2xl:flex-nowrap w-full justify-center'>
            {Array.from({ length: 38 }).map((_, colIndex) => {
              // Randomly decide whether to apply the background color
              const shouldColor = Math.random() < 0.4; // 40% chance
              return (
                <span 
                  key={colIndex} 
                  className={`box h-10 w-10 text-[#262652] flex justify-center items-center transition-colors duration-900 ${shouldColor ? 'bg-[#161628]' : 'bg-transparent'}`} 
                  // onMouseEnter={(e) => {
                  //   e.currentTarget.classList.add('bg-[#262652]');
                  // }}
                  // onMouseLeave={(e) => {
                  //   e.currentTarget.classList.remove('bg-[#262652]');
                  // }}
                >
                </span>
              );
            })}
          </div>
        ))}
      </div>


       <div className='flex flex-wrap justify-center items-center h-full absolute top-0 left-0 '>
        {Array.from({ length: 50 }).map((_, rowIndex) => (
          <div key={rowIndex} className='flex w-full justify-center'>
            {Array.from({ length: 40 }).map((_, colIndex) => (
              <span 
                key={colIndex} 
                className='h-10 w-10 text-[#0b0b14] border-[1px] border-[#ffffff1a] transition-colors duration-75 flex justify-center items-center' 
                onMouseEnter={(e) => {
                  e.target.style.backgroundColor = '#fff';
                  setTimeout(() => {
                    e.target.style.backgroundColor = '';
                  }, 100);
                }}
              >
                
              </span>
            ))}
          </div>
        ))}
      </div>